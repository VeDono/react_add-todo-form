{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","cn","TodoList","todos","map","App","useState","setTitle","userSelectedId","setUserSelectedId","todosFromServer","userIdRecived","usersFromServer","find","currentUser","preparedTodos","setPreparedTodos","hasTitleError","setHasTitleError","hasUserError","setHasUserError","addNewTodo","userFromServer","newTodo","Math","max","preparedTodo","currentPreparedTodos","action","method","onSubmit","event","preventDefault","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.268f90f5.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport { User } from '../../types';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { PreparedTodo } from '../../types';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: PreparedTodo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': todo.completed })}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      <UserInfo\n        user={todo.user}\n      />\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { PreparedTodo } from '../../types';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: PreparedTodo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map((todo) => (\n      <TodoInfo key={todo.id} todo={todo} />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\n\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { TodoList } from './components/TodoList';\nimport { PreparedTodo, Todo } from './types';\n\nfunction getUserById(userIdRecived: number) {\n  return (\n    usersFromServer.find((currentUser) => currentUser.id === userIdRecived)\n    || null\n  );\n}\n\nfunction getPreparedTodos(todosRecived: Todo[]) {\n  return todosRecived.map((todo) => ({\n    ...todo,\n    user: getUserById(todo.userId),\n  }));\n}\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [userSelectedId, setUserSelectedId] = useState(0);\n\n  const [preparedTodos, setPreparedTodos] = useState<PreparedTodo[]>(\n    getPreparedTodos(todosFromServer),\n  );\n\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const resetForm = (): void => {\n    setTitle('');\n    setUserSelectedId(0);\n  };\n\n  const getNewTodoId = (): number => {\n    const maxId = Math.max(...preparedTodos.map(preparedTodo => (\n      preparedTodo.id\n    )));\n\n    return maxId + 1;\n  };\n\n  const addNewTodo = (): void => {\n    const user = usersFromServer.find(userFromServer => (\n      userFromServer.id === userSelectedId\n    )) || null;\n\n    const newTodo = {\n      id: getNewTodoId(),\n      title,\n      completed: false,\n      userId: userSelectedId,\n      user,\n    };\n\n    setPreparedTodos(currentPreparedTodos => (\n      [...currentPreparedTodos, newTodo]\n    ));\n\n    resetForm();\n  };\n\n  const handleSubmitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserError(!userSelectedId);\n\n    if (!title || !userSelectedId) {\n      return;\n    }\n\n    addNewTodo();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmitForm}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">\n            <span>Title: </span>\n            <input\n              type=\"text\"\n              id=\"titleInput\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={event => {\n                setTitle(event.target.value);\n                setHasTitleError(false);\n              }}\n            />\n          </label>\n\n          {\n            hasTitleError && (\n              <span className=\"error\">Please enter a title</span>\n            )\n          }\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelector\">\n            <span>User: </span>\n            <select\n              data-cy=\"userSelect\"\n              value={userSelectedId}\n              onChange={event => {\n                setUserSelectedId(+event.target.value);\n                setHasUserError(false);\n              }}\n            >\n              <option value=\"0\" disabled>\n                Choose a user\n              </option>\n\n              {usersFromServer.map((userFromServer) => (\n                <option\n                  key={userFromServer.id}\n                  value={userFromServer.id}\n                >\n                  {userFromServer.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {\n            hasUserError && (\n              <span className=\"error\">Please choose a user</span>\n            )\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={preparedTodos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}